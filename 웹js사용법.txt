1. 자바스크립트 html 링크

- body 맨 마지막에 script 를 통해 link 한다.



2. 자바스크립트 디버깅

- 브라우저 개발자 도구 console에서 자바스크립트 디버깅이 가능하다.



3. 자바 스크립트 변수 네이밍 Convention

- 자바 스크립트 변수 네이밍 Convention으로는 CamelCase 를 따른다. 



4. 자바 스크립트 변수 정의 방법

- const, let, var 가 있다.
- 과거에는 var만 있었지만, 이제는 var는 사용하지 않고 const 와 let을 사용하는 것이 좋다.
- 이를 통해 boolean, null 을 표현할 수 있다.
- 변수를 정의만 하고 초기화하지 않은 변수를 출력할 경우 null이 아닌 undefined 이 출력된다.



5. Array

- let a = [1,2,3,4,5]; 와 같이 배열을 생성할 수 있다.
- let b = [1,2, "asdf", null, true, undefined]; 처럼 각기 다른 데이터 타입의 요소를 담고있는 배열을 만들 수 있다.



6. object 정의 방법

const player = {
    name: "chanhun",
    points: 10,
    fat: true,
};

와 같이 작성하면 된다.

- const 로 작성할 경우 player 는 다른 데이터 타입을 가질 수 없다. 하지만, player의 프로퍼티는 수정이 가능하다.

- object 정의 후 player.hp = 100; 코드를 추가하여 프로퍼티를 추가 및 초기화가 가능하다.



7.function 정의 방법

function sayHello(name){
    console.log("Hello", name);
}

sayHello("chanhun");

와 같이 정의하고 사용하면 되는데 매개변수를 정의할 때 데이터 타입은 지정하지 않는다.

- return 값이 필요하다면은 추가적으로 return 을 정의하면 된다.


8. NaN ( Not a Number )

- 숫자가 아니라는 뜻


9. object function

const player = {
    name: "chanhun",
    sayHello: function(firstName){
        console.log("Hello " + firstName + " " + this.name);
    }
}

- return 값이 필요하다면은 추가적으로 return 을 정의하면 된다.


10. typeof

- typeof 다음에 value 값을 셋팅하면 type을 확인할 수 있다.

- typeof(value); 이렇게도 사용 가능하다.


11. isNaN

- NaN인지 판별하는 함수


12. html 엘리먼트를 검색하는 방법

    - JS 는 document 오브젝트를 통해서 HTML 에 접근하여 읽고, 쓰기가 가능하다.


    * document.getElementById 오브젝트

    - getElementById 함수를 통해서 html 엘리먼트를 가져오는 것도 가능하다.
    
    - 조건에 맞는 엘리먼트가 여러개라면은 배열로 return 된다.


    * document.querySelector ( 노마드 코더가 선호하는 방식 )

    - querySelector(".hello h1") 과 같이 CSS 에서 엘리먼트를 지정하는 방식으로 html 엘리먼트를 검색할 수 있다.

    - 여러개의 엘리먼트가 검색됐다면 첫 번째 엘리먼트가 return 된다.

    - document.querySelectorAll 을 사용하면 여러개의 엘리먼트가 검색되었을 때 배열 형태로 retunr 된다.



13. JS를 이용한 CSS 수정

    - JS를 이용해서 CSS 값을 수정할 수 있다. 



14. 엘리먼트 조회

    - console.dir을 통해 이름이 on으로 시작하는 이름을 통해 사용할 수 있는 이벤트를 조회할 수 있다.



15. 이벤트 

    - addEventListener 를 통해서 감지할 이벤트와 콜백함수를 지정할 수 있다. ( 노마드 코더는 이 방식을 더 선호 )

        ex) title.addEventListener("click", handler);


    - 감지할 이벤트 프로퍼티에 콜백 함수를 등록해서 이벤트를 등록할 수 있다.

        ex) title.onclick = handler;



16. JS 로 style을 컨트롤하지 말자

    - style을 컨트롤 하는건 css가 담당하는 것이 좋다.
    - style 변경 시 JS 로 css class 나 id를 변경하도록 하는것이 좋다.



17. arg.preventDefault

    - 브라우저가 이벤트에 대한 기본적인 동작을 막아주도록 한다.



18. string 네이밍

    - 일반적으로 string만 포함된 변수는 대문자로 표기하고 스네이크 표기법을 따른다.



19. JS 문자열 보간

    - `Hello ${userName}`; 과 같이 문자열 보간 사용이 가능하다.


20. 랜덤

    - Math.random() 을 사용하면 0 이상 1 미만인 값을 얻어올 수 있다.
    - Math.floor() 을 사용하면 소수점 아래는 제거된다.



21. array filter

    - array filter 는 새로운 배열을 만들어 return 한다. 기존 array는 그대로 유지